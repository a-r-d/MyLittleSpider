html
[if IE 7]>
<html class="ie ie7" lang="en-US" prefix="og: http://ogp.me/ns#">
<![endif]
[if IE 8]>
<html class="ie ie8" lang="en-US" prefix="og: http://ogp.me/ns#">
<![endif]
[if !(IE 7) | !(IE 8)  ]><!
<![endif]
Clojure Adventures Part 1
[if lt IE 9]>
<script src="http://frameworkhell.com/wp-content/themes/twentytwelve/js/html5.js" type="text/javascript"></script>
<![endif]
This site is optimized with the Yoast WordPress SEO plugin v1.3.4.1 - http://yoast.com/wordpress/seo/
/ Yoast WordPress SEO plugin.
[if lt IE 9]>
<link rel='stylesheet' id='twentytwelve-ie-css'  href='http://frameworkhell.com/wp-content/themes/twentytwelve/css/ie.css?ver=20121010' type='text/css' media='all' />
<![endif]
.ads {
			position: relative;
			text-align: center;		
			clear: both;
		}
.recentcomments a{display:inline !important;padding:0 !important;margin:0 !important;}
.site-title a,
		.site-description {
			color: #b21515 !important;
		}
body.custom-background { background-color: #e6e6e6; background-image: url('http://frameworkhell.com/wp-content/uploads/2012/12/py+bw_logo_red_140.png'); background-repeat: repeat; background-position: top left; background-attachment: fixed; }
Google Analytics Tracking by Google Analyticator 6.4.1: http://www.videousermanuals.com/google-analyticator/
var analyticsFileTypes = [''];
	var analyticsEventTracking = 'enabled';
var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-34027872-1 ']);
        _gaq.push(['_addDevId', 'i9k95']); // Google Analyticator App ID with Google 
        
	_gaq.push(['_trackPageview']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
Framework Hell
Frameworks can be hellish- I try to help.
Menu
Skip to content
blog
about me
links
projects
#site-navigation
#masthead
Clojure Adventures Part 1
Leave a reply
.comments-link
.entry-header
Clojure Adventures Part 1:
Beginings (linux):
Install Clojure.
apt-get install clojure
Install Leiningen (like a clojure swiss army knife + package manager).
apt-get install leiningen
Install a clojure package to get started. You will now be able to access this program from the command line by calling ‘lein’. Firstly, I am trying to build a little crawler and I’m going to use enlive to do it. So the enlive tutorial (https://github.com/swannodette/enlive-tutorial).
First they say to clone the repo for enlive. Ok.
mkdir enlive-repo
cd enlive-repo
git clone git://github.com/swannodette/enlive-tutorial.git
From here on I am following the tutorial. Getting the dependencies with ‘lein deps’ and launching the repl in this location with ‘lein repl’.
Holy crap ‘lein deps’ just downloaded megs worth of shit. So what is this doing? It is looking at that project.clj file and downloading all of the dependencies listed here:
(defproject enlive-tutorial "0.1.0"
:description "Enlive Tutorial"
:dependencies [[org.clojure/clojure "1.2.0"]
[org.clojure/clojure-contrib "1.2.0"]
[enlive "1.0.0-SNAPSHOT"]
[ring "0.2.5"]
[net.cgrand/moustache "1.0.0-SNAPSHOT"]]
:dev-dependencies [[swank-clojure "1.3.0-SNAPSHOT"]]
:source-path "src")
<!--
	google_ad_client = "pub-9622909715647886";
	google_alternate_color = "FFFFFF";
	google_ad_width = 336;
	google_ad_height = 280;
	google_ad_format = "336x280_as";
	google_ad_type = "text";
	google_ad_channel ="";
	google_color_border = "";
	google_color_link = "";
	google_color_bg = "";
	google_color_text = "";
	google_color_url = "";
	google_ui_features = "rc:0";

	//-->
For some reason it needs clojure 1.2 idk.
Anyway, then you can go any scrape Hacker News and the New York Times. But now you want to start your own project. How does this work? Okay, so lets make a new project.
mkdir crawler1
Then I copy over the old project.clj file from the example and change the name and version number. Lets leave the dependencies the same and the source path can be left alone as well.
mkdir src
mkdir src/tests
I run ‘lein deps’ and leiningen copies over the libs I need into this new project dir. I go ahead and knock into ‘lein repl’. I notice it says server started on localhost port 19491 so it looks like ring is working well.
Okay, so I make a new file caled test1.clj underneath src/test and add some code. I put some code in this file based off of what the tutorial says and what
francis wolke
sent me earlier.
; scraper 1
(ns test.test1
(:require [net.cgrand.enlive-html :as html]))
(def urls ["http://www.a-r-d.me" "http://www.frameworkhell.com"])
(defn fetch-url [url]
(html/html-resource (java.net.URL. url)))
(defn all-links-pls [url]
(map html/text (html/select (fetch-url url) [:a])))
So now in the repl I can load this and try to run it. I do something like:
<!--
	google_ad_client = "pub-9622909715647886";
	google_alternate_color = "FFFFFF";
	google_ad_width = 468;
	google_ad_height = 60;
	google_ad_format = "468x60_as";
	google_ad_type = "text";
	google_ad_channel ="";
	google_color_border = "";
	google_color_link = "";
	google_color_bg = "";
	google_color_text = "";
	google_color_url = "";
	google_ui_features = "rc:0";

	//-->
user=> (load "test/test1")
nil
user=> (in-ns 'test.test1)
#
test.test1=> urls
["http://www.a-r-d.me" "http://www.frameworkhell.com"]
Then I try to walk into that namespace and call a var name to see if it is ok. It works, so now I can try to run some of that code that I put in the file. So first I play around to make sure it is working:
test.test1=> (all-links-pls “http://a-r-d.me”)
(“me” “contact” “about” “research / publications” “blog” “\n\t\t\t\t\t\t\t\t\tphoto” “github account” “youtube account (inorganic chem)” “jQuery Plugins” “Word Swap” “Simple Timer” “Numbers Everywhere: numBG.js” “Planet Menu” “Web Projects” “x01 – a pastebin with comments” “trade watch” “waanoo” “Terminal Buster” “rrg climbing spots”)
test.test1=> (all-links-pls (first urls))
(“me” “contact” “about” “research / publications” “blog” “\n\t\t\t\t\t\t\t\t\tphoto” “github account” “youtube account (inorganic chem)” “jQuery Plugins” “Word Swap” “Simple Timer” “Numbers Everywhere: numBG.js” “Planet Menu” “Web Projects” “x01 – a pastebin with comments” “trade watch” “waanoo” “Terminal Buster” “rrg climbing spots”)
(I truncated some of the results so it wasn’t so large). Now that worked! Cool! So now what do we want to do? Well of course we should actually try to get the ‘href’ attribute to the link tags. So lets do that… next time.
.entry-content
This entry was posted in
Uncategorized
on
December 26, 2012
by
admin
.
.entry-meta
#post
Post navigation
←
Flash Builder is useless without design view
Flex: Using mobile components in a Desktop app
→
.nav-single
Leave a Reply
Cancel reply
Your email address will not be published. Required fields are marked
*
Name
*
Email
*
Website
var RecaptchaOptions = {
				theme: 'red',
				lang: 'en',
				tabindex: 4
			};
Comment
You may use these
HTML
tags and attributes:
<a href="" title=""> <abbr title=""> <acronym title=""> <b> <blockquote cite=""> <cite> <code> <del datetime=""> <em> <i> <q cite=""> <strike> <strong>
#respond
#comments .comments-area
#content
#primary
Search for:
Recent Posts
Flex: Add MX controls to mobile App
A component skin system for same source mobile / desktop apps
Flex: Using mobile components in a Desktop app
Clojure Adventures Part 1
Flash Builder is useless without design view
Recent Comments
brand
on
Apache Axis 1.4 Tutorial – Making a Java Webservice with Tomcat 6. Part 1.
Archives
December 2012
September 2012
August 2012
Categories
AS3
Django
flashbuilder
Flex
Java
jQuery
Python
Uncategorized
Web Services
Meta
Log in
Entries
RSS
Comments
RSS
WordPress.org
#secondary
#main .wrapper
Proudly powered by WordPress
.site-info
#colophon
#page
