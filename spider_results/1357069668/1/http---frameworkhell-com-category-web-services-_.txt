html
[if IE 7]>
<html class="ie ie7" lang="en-US" prefix="og: http://ogp.me/ns#">
<![endif]
[if IE 8]>
<html class="ie ie8" lang="en-US" prefix="og: http://ogp.me/ns#">
<![endif]
[if !(IE 7) | !(IE 8)  ]><!
<![endif]
Web Services Archives | Framework Hell
[if lt IE 9]>
<script src="http://frameworkhell.com/wp-content/themes/twentytwelve/js/html5.js" type="text/javascript"></script>
<![endif]
This site is optimized with the Yoast WordPress SEO plugin v1.3.4.1 - http://yoast.com/wordpress/seo/
/ Yoast WordPress SEO plugin.
[if lt IE 9]>
<link rel='stylesheet' id='twentytwelve-ie-css'  href='http://frameworkhell.com/wp-content/themes/twentytwelve/css/ie.css?ver=20121010' type='text/css' media='all' />
<![endif]
.ads {
			position: relative;
			text-align: center;		
			clear: both;
		}
.recentcomments a{display:inline !important;padding:0 !important;margin:0 !important;}
.site-title a,
		.site-description {
			color: #b21515 !important;
		}
body.custom-background { background-color: #e6e6e6; background-image: url('http://frameworkhell.com/wp-content/uploads/2012/12/py+bw_logo_red_140.png'); background-repeat: repeat; background-position: top left; background-attachment: fixed; }
Google Analytics Tracking by Google Analyticator 6.4.1: http://www.videousermanuals.com/google-analyticator/
var analyticsFileTypes = [''];
	var analyticsEventTracking = 'enabled';
var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-34027872-1 ']);
        _gaq.push(['_addDevId', 'i9k95']); // Google Analyticator App ID with Google 
        
	_gaq.push(['_trackPageview']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
Framework Hell
Frameworks can be hellish- I try to help.
Menu
Skip to content
blog
about me
links
projects
#site-navigation
#masthead
Category Archives:
Web Services
.archive-header
Apache Axis 1.4 Tutorial – Making a Java Webservice with Tomcat 6. Part 1.
1 Reply
.comments-link
.entry-header
Apache AXIS is a SOAP Web Service that does really cool things like automatically expose existing java classes as web services with no modification. I will take you through the entire install and testing of a simple web service like this. We will even give it a math quiz.
First thing we need to is to set up Tomcat to help with this simple example. On windows, you need to set two environmental variables:
CATALINA_HOME
(which is the path to your tomcat directory- eg c:\servers\tomcat)
and
JRE_HOME
(which is the path your JRE install- eg c:\Program Files\java\jre6)
and
JAVA_HOME
(Axis needs this, not Tomcat eg: C:\jdk1.6.0_27 -yes AXIS actually needs the full JDK)
Check the screenshot below for hints here.
[screenshot]
—
Now you need to get a copy of AXIS. Get it from here, unzip it, and drop the “axis” directory from you download into the tomcat install under “webapps”. Second thing is you need the libraries. Go to axis/lib and copy all these .jar files over into the tomcat/lib directory.
Before you lauch tomcat you should also check some things:
1. What port are you running on?
If there is a conflict go to tomcat/conf/server.xml and change the “port” attribute from the first “connector” tag to something else. I usually run on something other than 8080 (default).
2. Do you have any users set up in tomcat-users.xml?
If not throw one in there. I usually just run everything with “test” in all fields when developing.
Now you can run startup.bat out of the tomcat/bin directory.
<!--
	google_ad_client = "pub-9622909715647886";
	google_alternate_color = "FFFFFF";
	google_ad_width = 336;
	google_ad_height = 280;
	google_ad_format = "336x280_as";
	google_ad_type = "text";
	google_ad_channel ="";
	google_color_border = "";
	google_color_link = "";
	google_color_bg = "";
	google_color_text = "";
	google_color_url = "";
	google_ui_features = "rc:0";

	//-->
Go to http://localhost:8084  (or http://localhost:8080  if you didn’t change it!).
If it is working, try to see if axis deployed OK. We dropped axis into the webapps directory so go ahead and navigate to http://localhost:8084/axis/  where you should see something like this:
[screenshot]
Now you will likely get some error that looks like this if you try to click “Call” on the main AXIS page:
No compiler found in your classpath!  (you may need to add 'tools.jar')
This may be because you don’t have the full JDK installed. Yes AXIS actually needs to compile stuff. The other possibility is that it is looking the JRE path for tools.jar… it will not find it! In this case you will have to copy tools.jar from the jdk/lib/tools.jar into tomcat/lib/ to get this working. It is 12 megabytes, you can’t miss it. This is what I had to do.
Try it again and you should get something like this:
[screenshot]
Okay so now lets try and actually do something. You are very likely here because your boss told you that you need to use AXIS and now you are trying to figure out what it is even for. So let’s do some examples. The easiest will be a very simple calculator class so here is what you will do:
Write the following and save it as “Calc.jws”:
public class Calc {
  public int add(int i1, int i2) {
    return i1 + i2; 
  }

  public int subtract(int i1, int i2) {
    return i1 - i2;
  }
}
Now copy this file into tomcat/webapps/axis/ yes, right into the root of the axis directory under your Tomcat Webapps. Now visit:
http://localhost:8084/axis/Calc.jws
And visit the link “click to see WSDL”.
An exceprt we will use:
 
<wsdl:operation name="add" parameterOrder="i1 i2">
    <wsdl:input message="impl:addRequest" name="addRequest"/>
    <wsdl:output message="impl:addResponse" name="addResponse"/>
</wsdl:operation>
Alright so there is that worked well right? Just add “?wsdl” to the end of the path to the webservice and you get the whole spec printed back. Now how do we communicate with this thing? It looks like we should be able to send it a command with an argument and it should spit stuff out right?
Can you just call it like this? -
http://localhost:8084/axis/Calc.jws?method=add&i1=3&i2=4
Yes. You should get something like:
<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <soapenv:Body>
        <addResponse soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
            <addReturn xsi:type="xsd:int">7</addReturn>
        </addResponse>
    </soapenv:Body>
</soapenv:Envelope>
Right, 3 + 4 = 7. The arguments were i1 and i2 for integer one and integer two. You should notice we got back a typed response also. Everything in AXIS is typed.
More reading:
Apache’s install instructions:
http://axis.apache.org/axis/java/install.html
Another tutorial:
http://www.digizol.org/2008/07/web-service-axis-tutorial-client-server.html
A guy that goes a little more in depth:
http://www.lucianofiandesio.com/javatales/axant.html
.entry-content
This entry was posted in
Web Services
on
December 22, 2012
by
admin
.
.entry-meta
#post
Apache Axis2 Tutorial. Part 1.
Leave a reply
.comments-link
.entry-header
In this post I am going to go over a quick Apache Axis2 Install following a little Axis2 Tutorial explaining how to get a basic web service up and running. I also provide the required structure and a download of the web service.
For reference:
Homepage..
|
Install Guide:
Installing Apache Axis2 is much easier than Axis 1.4 here is why:
you can download a WAR file with Axis2 already packaged
and just drop it into Tomcat and you are done (almost).
First lets click “Validation” and make sure everything is green in there. If not,
Apache can help
.
Axis2 works a little bit differently than Axis 1.4 in that the system is slightly more organized. All services are visible under:
http://localhost:8084/axis2/services/listServices
The project structure on the disk looks like: axis2/WEB-INF/services/
Each service is deployed as a .aar file with a specially arranged structure. You can also just drop the whole structure into the tomcat/webapps/axis2/WEB-INF/services/ directory without compressing to .aar format!
- ServiceName
- META-INF
- services.xml
- lib
- samples
- quickstart
- service
- pojo
- ServiceName.class
In the services.xml you have to specify some things:
Service Name Service


<messageReceiver
mep="http://www.w3.org/2004/08/wsdl/in-only"
class="org.apache.axis2.rpc.receivers.RPCInOnlyMessageReceiver"/>
<messageReceiver
mep="http://www.w3.org/2004/08/wsdl/in-out"
class="org.apache.axis2.rpc.receivers.RPCMessageReceiver"/>

samples.quickstart.service.pojo.ServiceName
Now to set up an example:
<!--
	google_ad_client = "pub-9622909715647886";
	google_alternate_color = "FFFFFF";
	google_ad_width = 468;
	google_ad_height = 60;
	google_ad_format = "468x60_as";
	google_ad_type = "text";
	google_ad_channel ="";
	google_color_border = "";
	google_color_link = "";
	google_color_bg = "";
	google_color_text = "";
	google_color_url = "";
	google_ui_features = "rc:0";

	//-->
First set an envirnoment variable called AXIS2_HOME: (e.g – C:\Users\adecker\Documents\apache-tomcat-6.0.35\webapps\axis2)…
Now lets use the class axis provides for us:
package samples.quickstart.service.pojo;

import java.util.HashMap;

public class ExampleService {
private HashMap map = new HashMap();

public double getPrice(String symbol) {
Double price = (Double) map.get(symbol);
if(price != null){
return price.doubleValue();
}
return 42.00;
}

public void update(String symbol, double price) {
map.put(symbol, new Double(price));
}
}
And they also require a very very specific folder structure. So I am providing that as a download here:
[download] ExampleService.zip
Now go ahead and compile that java class:
javac ExampleService.java
And drop the file into your services directory:
tomcat/webapps/axis2/WEB-INF/services/
And check:
http://localhost:8084/axis2/services/listServices
once again…
You should then click on
http://localhost:8084/axis2/services/ExampleService?wsdl
And make sure the WSDL come out fine. Now we can test it. Check the WSDL document to see what kind of things we can do. If you look, there are two Operations near the bottom called “getPrice” and “update”. To call them you specify in the URL string operation, then argument.
http://localhost:8084/axis2/services/ExampleService/getPrice?symbol=FB
Note that this is not the same URL structure that Axis 1.4 uses.
Result:
42.0
.entry-content
This entry was posted in
Web Services
on
August 16, 2012
by
admin
.
.entry-meta
#post
Apache AXIS 1.4 Tutorial – Making a Java Webservice with Tomcat 6.
Leave a reply
.comments-link
.entry-header
Apache AXIS 1.4 is a Java Web Service generator which is really cool because it is able to take existing Java Classes and transform them into Web Services with the ease of drag and drop. I will take you through how to set the whole thing up and even test it with some math problems.
First thing we need to is to set up Tomcat to help with this simple example. On windows, you need to set three environmental variables:
CATALINA_HOME
(which is the path to your tomcat directory- eg c:\servers\tomcat)
and
JRE_HOME
(which is the path your JRE install- eg c:\Program Files\java\jre6)
and
JAVA_HOME
(Axis needs this, not Tomcat eg: C:\jdk1.6.0_27 -yes AXIS actually needs the full JDK)
Check the screenshot below for hints here.
—
Now you need to get a copy of AXIS. Get it from here, unzip it, and drop the “axis” directory from you download into the tomcat install under “webapps”. Second thing is you need the libraries. Go to axis/lib and copy all these .jar files over into the tomcat/lib directory.
<!--
	google_ad_client = "pub-9622909715647886";
	google_alternate_color = "FFFFFF";
	google_ad_width = 336;
	google_ad_height = 280;
	google_ad_format = "336x280_as";
	google_ad_type = "text";
	google_ad_channel ="";
	google_color_border = "";
	google_color_link = "";
	google_color_bg = "";
	google_color_text = "";
	google_color_url = "";
	google_ui_features = "rc:0";

	//-->
Before you lauch tomcat you should also check some things:
1. What port are you running on?
If there is a conflict go to tomcat/conf/server.xml and change the “port” attribute from the first “connector” tag to something else. I usually run on something other than 8080 (default).
2. Do you have any users set up in tomcat-users.xml?
If not throw one in there. I usually just run everything with “test” in all fields when developing.
Now you can run startup.bat out of the tomcat/bin directory.
Go to http://localhost:8084  (or http://localhost:8080  if you didn’t change it!).
If it is working, try to see if axis deployed OK. We dropped axis into the webapps directory so go ahead and navigate to http://localhost:8084/axis/  where you should see something like this:
Now you will likely get some error that looks like this if you try to click “Call” on the main AXIS page:
No compiler found in your classpath!  (you may need to add 'tools.jar')
This may be because you don’t have the full JDK installed. Yes AXIS actually needs to compile stuff. The other possibility is that it is looking the JRE path for tools.jar… it will not find it! In this case you will have to copy tools.jar from the jdk/lib/tools.jar into tomcat/lib/ to get this working. It is 12 megabytes, you can’t miss it. This is what I had to do.
Try it again and you should get something like this:
Okay so now lets try and actually do something. You are very likely here because your boss told you that you need to use AXIS and now you are trying to figure out what it is even for. So let’s do some examples. The easiest will be a very simple calculator class so here is what you will do:
Write the following and save it as “Calc.jws”:
public class Calc {
  public int add(int i1, int i2) {
    return i1 + i2; 
  }

  public int subtract(int i1, int i2) {
    return i1 - i2;
  }
}
Now copy this file into tomcat/webapps/axis/ yes, right into the root of the axis directory under your Tomcat Webapps. Now visit:
http://localhost:8084/axis/Calc.jws
And visit the link “click to see WSDL”.
An exceprt we will use:
 
<wsdl:operation name="add" parameterOrder="i1 i2">
    <wsdl:input message="impl:addRequest" name="addRequest"/>
    <wsdl:output message="impl:addResponse" name="addResponse"/>
</wsdl:operation>
Alright so there is that worked well right? Just add “?wsdl” to the end of the path to the webservice and you get the whole spec printed back. Now how do we communicate with this thing? It looks like we should be able to send it a command with an argument and it should spit stuff out right?
Can you just call it like this? -
http://localhost:8084/axis/Calc.jws?method=add&i1=3&i2=4
Yes. You should get something like:
<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <soapenv:Body>
        <addResponse soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
            <addReturn xsi:type="xsd:int">7</addReturn>
        </addResponse>
    </soapenv:Body>
</soapenv:Envelope>
Right, 3 + 4 = 7. The arguments were i1 and i2 for integer one and integer two. You should notice we got back a typed response also. Everything in AXIS is typed.
More reading:
Apache’s install instructions:
http://axis.apache.org/axis/java/install.html
Another tutorial:
http://www.digizol.org/2008/07/web-service-axis-tutorial-client-server.html
A guy that goes a little more in depth:
http://www.lucianofiandesio.com/javatales/axant.html
.entry-content
This entry was posted in
Web Services
on
August 16, 2012
by
admin
.
.entry-meta
#post
#content
#primary
Search for:
Recent Posts
Flex: Add MX controls to mobile App
A component skin system for same source mobile / desktop apps
Flex: Using mobile components in a Desktop app
Clojure Adventures Part 1
Flash Builder is useless without design view
Recent Comments
brand
on
Apache Axis 1.4 Tutorial – Making a Java Webservice with Tomcat 6. Part 1.
Archives
December 2012
September 2012
August 2012
Categories
AS3
Django
flashbuilder
Flex
Java
jQuery
Python
Uncategorized
Web Services
Meta
Log in
Entries
RSS
Comments
RSS
WordPress.org
#secondary
#main .wrapper
Proudly powered by WordPress
.site-info
#colophon
#page
//<![CDATA[
SyntaxHighlighter.all();
//]]>
